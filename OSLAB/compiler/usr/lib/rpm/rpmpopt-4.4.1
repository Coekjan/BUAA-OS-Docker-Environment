#/*! \page config_rpmpopt Default configuration: %{_runtimeprefix}/usr/lib/rpm/rpmpopt-4.4.1
# \verbatim
#
# %{_runtimeprefix}/usr/lib/rpm/rpmpopt.  Generated from rpmpopt.in by configure.
# $Id: rpmpopt.in,v 2.39.2.1 2005/01/09 17:48:19 jbj Exp $
#
# This file *should not be modified*. Local customizations
# belong in /etc/popt, not here. This file will be replaced
# whenever a new version of RPM is installed.
#
# Note: Not all popt aliases are documented. This is a decision on my
# part as to which are the more important aliases. Feel free to clip
# a copy of the alias/exec here and place in /etc/popt or ~/.popt with
# your own words added. It's easier than arguing about how many options
# fit on the head of an executable :-)
#

rpm	alias --scripts --qf '\
%|PREIN?{preinstall scriptlet\
%|PREINPROG?{ (using %{PREINPROG})}|:\n%{PREIN}\n}:\
{%|PREINPROG?{preinstall program: %{PREINPROG}\n}|}|\
\
%|POSTIN?{postinstall scriptlet\
%|POSTINPROG?{ (using %{POSTINPROG})}|:\n%{POSTIN}\n}:\
{%|POSTINPROG?{postinstall program: %{POSTINPROG}\n}|}|\
\
%|PREUN?{preuninstall scriptlet\
%|PREUNPROG?{ (using %{PREUNPROG})}|:\n%{PREUN}\n}:\
{%|PREUNPROG?{preuninstall program: %{PREUNPROG}\n}|}|\
\
%|POSTUN?{postuninstall scriptlet\
%|POSTUNPROG?{ (using %{POSTUNPROG})}|:\n%{POSTUN}\n}:\
{%|POSTUNPROG?{postuninstall program: %{POSTUNPROG}\n}|}|\
\
%|VERIFYSCRIPT?{verify scriptlet:\n%{VERIFYSCRIPT}\n}|\
' \
	--POPTdesc=$"list install/erase scriptlets from package(s)"

rpm	alias --setperms -q --qf '[\[ -L %{FILENAMES:shescape} \] || chmod %7.7{FILEMODES:octal} %{FILENAMES:shescape}\n]' \
		   --pipe "grep -v \(none\) | sed 's/chmod .../chmod /' | sh" \
	--POPTdesc=$"set permissions of files in a package"

rpm	alias --setugids -q --qf \
        '[ch %{FILEUSERNAME:shescape} %{FILEGROUPNAME:shescape} %{FILENAMES:shescape}\n]' \
        --pipe "(echo 'ch() { chown -- \"$1\" \"$3\";chgrp -- \"$2\" \"$3\"; }';grep -v \(none\))|sh" \
	--POPTdesc=$"set user/group ownership of files in a package"

rpm	alias --conflicts	--qf \
  "[%{CONFLICTNAME} %{CONFLICTFLAGS:depflags} %{CONFLICTVERSION}\n]" \
	--POPTdesc=$"list capabilities this package conflicts with"
rpm	alias --obsoletes	--qf \
  "[%{OBSOLETENAME} %|OBSOLETEFLAGS?{%{OBSOLETEFLAGS:depflags} %{OBSOLETEVERSION}}:{}|\n]" \
	--POPTdesc=$"list other packages removed by installing this package"
rpm	alias --provides	--qf \
  "[%{PROVIDENAME} %|PROVIDEFLAGS?{%{PROVIDEFLAGS:depflags} %{PROVIDEVERSION}}:{}|\n]" \
	--POPTdesc=$"list capabilities that this package provides"

rpm	alias --requires	--qf \
  "[%{REQUIRENAME} %{REQUIREFLAGS:depflags} %{REQUIREVERSION}\n]" \
	--POPTdesc=$"list capabilities required by package(s)"
rpm	alias -R --requires

rpm	alias --info --qf 'Name        : %-27{NAME}  Relocations: %|PREFIXES?{[%{PREFIXES} ]}:{(not relocatable)}|\n\
Version     : %-27{VERSION}       Vendor: %{VENDOR}\n\
Release     : %-27{RELEASE}   Build Date: %{BUILDTIME:date}\n\
Install Date: %|INSTALLTIME?{%-27{INSTALLTIME:date}}:{(not installed)         }|      Build Host: %{BUILDHOST}\n\
Group       : %-27{GROUP}   Source RPM: %{SOURCERPM}\n\
Size        : %-27{SIZE}%|LICENSE?{      License: %{LICENSE}}|\n\
Signature   : %|DSAHEADER?{%{DSAHEADER:pgpsig}}:{%|RSAHEADER?{%{RSAHEADER:pgpsig}}:{%|SIGGPG?{%{SIGGPG:pgpsig}}:{%|SIGPGP?{%{SIGPGP:pgpsig}}:{(none)}|}|}|}|\n\
%|PACKAGER?{Packager    : %{PACKAGER}\n}|\
%|URL?{URL         : %{URL}\n}|\
Build Archs : %{BUILDARCHS}\n\
Summary     : %{SUMMARY}\n\
Description :\n%{DESCRIPTION}\n' \
	--POPTdesc=$"list descriptive information from package(s)"

rpm	alias --changelog --qf '[* %{CHANGELOGTIME:day} %{CHANGELOGNAME}\n%{CHANGELOGTEXT}\n\n]' \
	--POPTdesc=$"list change logs for this package"

rpm	alias --triggerscripts --qf '\
[trigger%{TRIGGERTYPE} scriptlet (using %{TRIGGERSCRIPTPROG}) -- %{TRIGGERCONDS}\n\
%{TRIGGERSCRIPTS}\n]'
rpm	alias --triggers --triggerscripts \
	--POPTdesc=$"list trigger scriptlets from package(s)"

rpm	alias --last --qf '%|INSTALLTIME?{%{INSTALLTIME}}:{000000000}| %{NAME}-%{VERSION}-%{RELEASE} %|INSTALLTIME?{%{INSTALLTIME:date}}:{(not installed)}|\n' \
	--pipe "sort -r -n | sed 's,^[0-9]\+ ,,' | awk '{printf(\"%-45s %-s\n\", $1, substr($0,length($1)+2))}' " \
	--POPTdesc=$"list package(s) by install time, most recent first"

rpm	alias --filesbypkg --qf '[%-25{=NAME} %{FILENAMES}\n]' \
	--POPTdesc=$"list all files from each package"

rpm	alias --fileclass --qf '[%{FILENAMES}\t%{FILECLASS}\n]' \
	--POPTdesc=$"list file names with classes"

rpm	alias --filecolor --qf '[%{FILENAMES}\t%{FILECOLORS}\n]' \
	--POPTdesc=$"list file names with colors"

rpm	alias --filecontext --qf '[%{FILENAMES}\t%{FILECONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from header"

rpm	alias --fscontext --qf '[%{FILENAMES}\t%{FSCONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from file system"

rpm	alias --recontext --qf '[%{FILENAMES}\t%{RECONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from policy RE"

rpm	alias --fileprovide --qf '[%{FILENAMES}\t%{FILEPROVIDE}\n]' \
	--POPTdesc=$"list file names with provides"

rpm	alias --filerequire --qf '[%{FILENAMES}\t%{FILEREQUIRE}\n]' \
	--POPTdesc=$"list file names with requires"

rpm alias --redhatprovides -q --define '_dbpath /usr/lib/rpmdb/%{_arch}-%{_vendor}-%{_os}/redhat' --whatprovides \
	--POPTdesc=$"find package name that contains a provided capability (needs rpmdb-redhat package installed)"

rpm alias --redhatrequires -q --define '_dbpath /usr/lib/rpmdb/%{_arch}-%{_vendor}-%{_os}/redhat' --whatrequires \
	--POPTdesc=$"find package name that contains a required capability (needs rpmdb-redhat package installed)"

# colon separated i18n domains to use as PO catalogue lookaside for
* retrieving header group/description/summary.
#
# For Red Hat, value should be "redhat-dist:redhat-powertools".
rpm alias --i18ndomains --define '_i18ndomains !#:+'

# Build policies enabled from command line. Last policy applies.
rpm alias --buildpolicy --define '__os_install_post %{_runtimeprefix}/usr/lib/rpm/brp-!#:+' \
	--POPTdesc=$"set buildroot <policy> (e.g. compress man pages)" \
	--POPTargs=$"<policy>"

# Choose db interface:
#	0	same as 1
#	1	native db1 interface (e.g. linux glibc libdb1 routines).
#	2	native db2 interface.
#	3	native db3 interface.
#	-1	db3 -> db2 -> db1 (as available).
#
# There are two macros so that --rebuilddb can convert db1 -> db3
rpm alias --dbapi		 --define '_dbapi !#:+'

rpm alias --rebuilddbapi	 --define '_dbapi_rebuild !#:+'
rpm alias --rebuilddbpath	 --define '_dbapath_rebuild !#:+'

#==============================================================================
#	[--dbpath DIRECTORY"	"use database in DIRECTORY"
rpm	alias --dbpath		--define '_dbpath !#:+'
#	[--ftpport <port>]	"port number of ftp server (or proxy)"
rpm	alias --ftpport		--define '_ftpport !#:+'
#	[--ftpproxy <host>]	"hostname or IP of ftp proxy"
rpm	alias --ftpproxy	--define '_ftpproxy !#:+'
#	[--httpport <port>]	"port number of http server (or proxy)"
rpm	alias --httpport	--define '_httpport !#:+'
#	[--httpproxy <host>]	"hostname or IP of http proxy"
rpm	alias --httpproxy	--define '_httpproxy !#:+'

# set the time check to <secs>
rpm	alias --timecheck	--define '_timecheck !#:+'

#==============================================================================
# Popt glue to preserve legacy CLI behavior.
#
# XXX popt exec parsing doesn't honor POPT_ARGFLAG_ONEDASH
# XXX Build mode aliases, removed in rpm-4.1.
#rpm	exec --bp		rpmb -bp
#rpm	exec --bc		rpmb -bc
#rpm	exec --bi		rpmb -bi
#rpm	exec --bl		rpmb -bl
#rpm	exec --ba		rpmb -ba
#rpm	exec --bb		rpmb -bb
#rpm	exec --bs		rpmb -bs
#rpm	exec --tp		rpmb -tp
#rpm	exec --tc		rpmb -tc
#rpm	exec --ti		rpmb -ti
#rpm	exec --tl		rpmb -tl
#rpm	exec --ta		rpmb -ta
#rpm	exec --tb		rpmb -tb
#rpm	exec --ts		rpmb -ts
#rpm	exec --rebuild		rpmb --rebuild
#rpm	exec --recompile	rpmb --recompile
#rpm	exec --clean		rpmb --clean
#rpm	exec --rmsource		rpmb --rmsource
#rpm	exec --rmspec		rpmb --rmspec
#rpm	exec --target		rpmb --target
#rpm	exec --short-circuit	rpmb --short-circuit

rpm	exec --initdb		rpmd --initdb
rpm	exec --rebuilddb	rpmd --rebuilddb
rpm	exec --verifydb		rpmd --verifydb

rpm	exec --addsign		rpmk --addsign
rpm	exec -K			rpmk -K
rpm	exec --checksig		rpmk --checksig
rpm	exec --import		rpmk --import
rpm	exec --resign		rpmk --resign

rpm	exec -q			rpmq -q
rpm	exec --query		rpmq --query
rpm	exec --querytags	rpmq --querytags
rpm	exec -V			rpmv -V
rpm	exec -y			rpmv -y
rpm	exec --verify		rpmv --verify

#rpm	exec -i			rpmi -i
#rpm	exec --install		rpmi --install
#rpm	exec -U			rpmi -U
#rpm	exec --upgrade		rpmi --upgrade
#rpm	exec -F			rpmi -F
#rpm	exec --freshen		rpmi --freshen
#rpm	exec -e			rpmi -e
#rpm	exec --erase		rpmi --erase

rpm	alias --with		--define "_with_!#:+       --with-!#:+" \
	--POPTdesc=$"enable configure <option> for build" \
	--POPTargs=$"<option>"
rpm	alias --without		--define "_without_!#:+    --without-!#:+" \
	--POPTdesc=$"disable configure <option> for build" \
	--POPTargs=$"<option>"
#==============================================================================
rpmb	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmb	alias --ftpport		--define '_ftpport !#:+'
rpmb	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmb	alias --httpport	--define '_httpport !#:+'
rpmb	alias --httpproxy	--define '_httpproxy !#:+'
rpmb	alias --timecheck	--define '_timecheck !#:+'
rpmb	alias --with		--define "_with_!#:+       --with-!#:+" \
	--POPTdesc=$"enable configure <option> for build" \
	--POPTargs=$"<option>"
rpmb	alias --without		--define "_without_!#:+    --without-!#:+" \
	--POPTdesc=$"disable configure <option> for build" \
	--POPTargs=$"<option>"
#==============================================================================
rpmbuild	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmbuild alias --ftpport		--define '_ftpport !#:+'
rpmbuild alias --ftpproxy	--define '_ftpproxy !#:+'
rpmbuild alias --httpport	--define '_httpport !#:+'
rpmbuild alias --httpproxy	--define '_httpproxy !#:+'
rpmbuild alias --timecheck	--define '_timecheck !#:+'
rpmbuild alias --with		--define "_with_!#:+     --with-!#:+" \
	--POPTdesc=$"enable configure <option> for build" \
	--POPTargs=$"<option>"
rpmbuild alias --without	--define "_without_!#:+  --without-!#:+" \
	--POPTdesc=$"disable configure <option> for build" \
	--POPTargs=$"<option>"
#==============================================================================
rpmd	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmd	alias --ftpport		--define '_ftpport !#:+'
rpmd	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmd	alias --httpport	--define '_httpport !#:+'
rpmd	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpmdb	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmdb	alias --ftpport		--define '_ftpport !#:+'
rpmdb	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmdb	alias --httpport	--define '_httpport !#:+'
rpmdb	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpme	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpme	alias --ftpport		--define '_ftpport !#:+'
rpme	alias --ftpproxy	--define '_ftpproxy !#:+'
rpme	alias --httpport	--define '_httpport !#:+'
rpme	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpmi	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmi	alias --ftpport		--define '_ftpport !#:+'
rpmi	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmi	alias --httpport	--define '_httpport !#:+'
rpmi	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpmk	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmk	alias --ftpport		--define '_ftpport !#:+'
rpmk	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmk	alias --httpport	--define '_httpport !#:+'
rpmk	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpmsign	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmsign	alias --ftpport		--define '_ftpport !#:+'
rpmsign	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmsign	alias --httpport	--define '_httpport !#:+'
rpmsign	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpmq	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmq	alias --ftpport		--define '_ftpport !#:+'
rpmq	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmq	alias --httpport	--define '_httpport !#:+'
rpmq	alias --httpproxy	--define '_httpproxy !#:+'

rpmq	alias --scripts --qf '\
%|PREIN?{preinstall scriptlet\
%|PREINPROG?{ (using %{PREINPROG})}|:\n%{PREIN}\n}:\
{%|PREINPROG?{preinstall program: %{PREINPROG}\n}|}|\
\
%|POSTIN?{postinstall scriptlet\
%|POSTINPROG?{ (using %{POSTINPROG})}|:\n%{POSTIN}\n}:\
{%|POSTINPROG?{postinstall program: %{POSTINPROG}\n}|}|\
\
%|PREUN?{preuninstall scriptlet\
%|PREUNPROG?{ (using %{PREUNPROG})}|:\n%{PREUN}\n}:\
{%|PREUNPROG?{preuninstall program: %{PREUNPROG}\n}|}|\
\
%|POSTUN?{postuninstall scriptlet\
%|POSTUNPROG?{ (using %{POSTUNPROG})}|:\n%{POSTUN}\n}:\
{%|POSTUNPROG?{postuninstall program: %{POSTUNPROG}\n}|}|\
\
%|VERIFYSCRIPT?{verify scriptlet:\n%{VERIFYSCRIPT}\n}|\
' \
	--POPTdesc=$"list install/erase scriptlets from package(s)"

rpmq	alias --conflicts	--qf \
  "[%{CONFLICTNAME} %{CONFLICTFLAGS:depflags} %{CONFLICTVERSION}\n]" \
	--POPTdesc=$"list capabilities this package conflicts with"
rpmq	alias --obsoletes	--qf \
  "[%{OBSOLETENAME} %|OBSOLETEFLAGS?{%{OBSOLETEFLAGS:depflags} %{OBSOLETEVERSION}}:{}|\n]" \
	--POPTdesc=$"list other packages removed by installing this package"
rpmq	alias --provides	--qf \
  "[%{PROVIDENAME} %|PROVIDEFLAGS?{%{PROVIDEFLAGS:depflags} %{PROVIDEVERSION}}:{}|\n]" \
	--POPTdesc=$"list capabilities that this package provides"

rpmq	alias --requires	--qf \
  "[%{REQUIRENAME} %{REQUIREFLAGS:depflags} %{REQUIREVERSION}\n]" \
	--POPTdesc=$"list capabilities required by package(s)"
rpmq	alias -R --requires

rpmq	alias --info --qf 'Name        : %-27{NAME}  Relocations: %|PREFIXES?{[%{PREFIXES} ]}:{(not relocatable)}|\n\
Version     : %-27{VERSION}       Vendor: %{VENDOR}\n\
Release     : %-27{RELEASE}   Build Date: %{BUILDTIME:date}\n\
Install Date: %|INSTALLTIME?{%-27{INSTALLTIME:date}}:{(not installed)         }|      Build Host: %{BUILDHOST}\n\
Group       : %-27{GROUP}   Source RPM: %{SOURCERPM}\n\
Size        : %-27{SIZE}%|LICENSE?{      License: %{LICENSE}}|\n\
Signature   : %|DSAHEADER?{%{DSAHEADER:pgpsig}}:{%|RSAHEADER?{%{RSAHEADER:pgpsig}}:{%|SIGGPG?{%{SIGGPG:pgpsig}}:{%|SIGPGP?{%{SIGPGP:pgpsig}}:{(none)}|}|}|}|\n\
%|PACKAGER?{Packager    : %{PACKAGER}\n}|\
%|URL?{URL         : %{URL}\n}|\
Build Archs : %{BUILDARCHS}\n\
Summary     : %{SUMMARY}\n\
Description :\n%{DESCRIPTION}\n' \
	--POPTdesc=$"list descriptive information from package(s)"

rpmq	alias --changelog --qf '[* %{CHANGELOGTIME:day} %{CHANGELOGNAME}\n%{CHANGELOGTEXT}\n\n]' \
	--POPTdesc=$"list change logs for this package"

rpmq	alias --triggerscripts --qf '\
[trigger%{TRIGGERTYPE} scriptlet (using %{TRIGGERSCRIPTPROG}) -- %{TRIGGERCONDS}\n\
%{TRIGGERSCRIPTS}\n]'
rpmq	alias --triggers --triggerscripts \
	--POPTdesc=$"list trigger scriptlets from package(s)"

rpmq	alias --last --qf '%|INSTALLTIME?{%{INSTALLTIME}}:{000000000}| %{NAME}-%{VERSION}-%{RELEASE} %|INSTALLTIME?{%{INSTALLTIME:date}}:{(not installed)}|\n' \
	--pipe "sort -r -n | sed 's,^[0-9]\+ ,,' | awk '{printf(\"%-45s %-s\n\", $1, substr($0,length($1)+2))}' " \
	--POPTdesc=$"list package(s) by install time, most recent first"

rpmq	alias --filesbypkg --qf '[%-25{=NAME} %{FILENAMES}\n]' \
	--POPTdesc=$"list all files from each package"

rpmq	alias --fileclass --qf '[%{FILENAMES}\t%{FILECLASS}\n]' \
	--POPTdesc=$"list file names with classes"

rpmq	alias --filecolor --qf '[%{FILENAMES}\t%{FILECOLORS}\n]' \
	--POPTdesc=$"list file names with colors"

rpmq	alias --filecontext --qf '[%{FILENAMES}\t%{FILECONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context"

rpmq	alias --fscontext --qf '[%{FILENAMES}\t%{FSCONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from file system"

rpmq	alias --recontext --qf '[%{FILENAMES}\t%{RECONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from policy RE"

rpmq	alias --fileprovide --qf '[%{FILENAMES}\t%{FILEPROVIDE}\n]' \
	--POPTdesc=$"list file names with provides"

rpmq	alias --filerequire --qf '[%{FILENAMES}\t%{FILEREQUIRE}\n]' \
	--POPTdesc=$"list file names with requires"

#==============================================================================
rpmquery	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmquery	alias --ftpport		--define '_ftpport !#:+'
rpmquery	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmquery	alias --httpport	--define '_httpport !#:+'
rpmquery	alias --httpproxy	--define '_httpproxy !#:+'

rpmquery	alias --scripts --qf '\
%|PREIN?{preinstall scriptlet\
%|PREINPROG?{ (using %{PREINPROG})}|:\n%{PREIN}\n}:\
{%|PREINPROG?{preinstall program: %{PREINPROG}\n}|}|\
\
%|POSTIN?{postinstall scriptlet\
%|POSTINPROG?{ (using %{POSTINPROG})}|:\n%{POSTIN}\n}:\
{%|POSTINPROG?{postinstall program: %{POSTINPROG}\n}|}|\
\
%|PREUN?{preuninstall scriptlet\
%|PREUNPROG?{ (using %{PREUNPROG})}|:\n%{PREUN}\n}:\
{%|PREUNPROG?{preuninstall program: %{PREUNPROG}\n}|}|\
\
%|POSTUN?{postuninstall scriptlet\
%|POSTUNPROG?{ (using %{POSTUNPROG})}|:\n%{POSTUN}\n}:\
{%|POSTUNPROG?{postuninstall program: %{POSTUNPROG}\n}|}|\
\
%|VERIFYSCRIPT?{verify scriptlet:\n%{VERIFYSCRIPT}\n}|\
' \
	--POPTdesc=$"list install/erase scriptlets from package(s)"

rpmquery	alias --conflicts	--qf \
  "[%{CONFLICTNAME} %{CONFLICTFLAGS:depflags} %{CONFLICTVERSION}\n]" \
	--POPTdesc=$"list capabilities this package conflicts with"
rpmquery	alias --obsoletes	--qf \
  "[%{OBSOLETENAME} %|OBSOLETEFLAGS?{%{OBSOLETEFLAGS:depflags} %{OBSOLETEVERSION}}:{}|\n]" \
	--POPTdesc=$"list other packages removed by installing this package"
rpmquery	alias --provides	--qf \
  "[%{PROVIDENAME} %|PROVIDEFLAGS?{%{PROVIDEFLAGS:depflags} %{PROVIDEVERSION}}:{}|\n]" \
	--POPTdesc=$"list capabilities that this package provides"

rpmquery	alias --requires	--qf \
  "[%{REQUIRENAME} %{REQUIREFLAGS:depflags} %{REQUIREVERSION}\n]" \
	--POPTdesc=$"list capabilities required by package(s)"
rpmquery	alias -R --requires

rpmquery	alias --info --qf 'Name        : %-27{NAME}  Relocations: %|PREFIXES?{[%{PREFIXES} ]}:{(not relocatable)}|\n\
Version     : %-27{VERSION}       Vendor: %{VENDOR}\n\
Release     : %-27{RELEASE}   Build Date: %{BUILDTIME:date}\n\
Install Date: %|INSTALLTIME?{%-27{INSTALLTIME:date}}:{(not installed)         }|      Build Host: %{BUILDHOST}\n\
Group       : %-27{GROUP}   Source RPM: %{SOURCERPM}\n\
Size        : %-27{SIZE}%|LICENSE?{      License: %{LICENSE}}|\n\
%|PACKAGER?{Packager    : %{PACKAGER}\n}|\
%|URL?{URL         : %{URL}\n}|\
Build Archs : %{BUILDARCHS}\n\
Summary     : %{SUMMARY}\n\
Description :\n%{DESCRIPTION}\n' \
	--POPTdesc=$"list descriptive information from package(s)"

rpmquery	alias --changelog --qf '[* %{CHANGELOGTIME:day} %{CHANGELOGNAME}\n%{CHANGELOGTEXT}\n\n]' \
	--POPTdesc=$"list change logs for this package"

rpmquery	alias --triggerscripts --qf '\
[trigger%{TRIGGERTYPE} scriptlet (using %{TRIGGERSCRIPTPROG}) -- %{TRIGGERCONDS}\n\
%{TRIGGERSCRIPTS}\n]'
rpmquery	alias --triggers --triggerscripts \
	--POPTdesc=$"list trigger scriptlets from package(s)"

rpmquery	alias --last --qf '%|INSTALLTIME?{%{INSTALLTIME}}:{000000000}| %{NAME}-%{VERSION}-%{RELEASE} %|INSTALLTIME?{%{INSTALLTIME:date}}:{(not installed)}|\n' \
	--pipe "sort -r -n | sed 's,^[0-9]\+ ,,' | awk '{printf(\"%-45s %-s\n\", $1, substr($0,length($1)+2))}' " \
	--POPTdesc=$"list package(s) by install time, most recent first"

rpmquery	alias --filesbypkg --qf '[%-25{=NAME} %{FILENAMES}\n]' \
	--POPTdesc=$"list all files from each package"

rpmquery	alias --fileclass --qf '[%{FILENAMES}\t%{FILECLASS}\n]' \
	--POPTdesc=$"list file names with classes"

rpmquery	alias --filecolor --qf '[%{FILENAMES}\t%{FILECOLORS}\n]' \
	--POPTdesc=$"list file names with colors"

rpmquery	alias --filecontext --qf '[%{FILENAMES}\t%{FILECONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context"

rpmquery	alias --fscontext --qf '[%{FILENAMES}\t%{FSCONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from file system"

rpmquery	alias --recontext --qf '[%{FILENAMES}\t%{RECONTEXTS}\n]' \
	--POPTdesc=$"list file names with security context from policy RE"

rpmquery	alias --fileprovide --qf '[%{FILENAMES}\t%{FILEPROVIDE}\n]' \
	--POPTdesc=$"list file names with provides"

rpmquery	alias --filerequire --qf '[%{FILENAMES}\t%{FILEREQUIRE}\n]' \
	--POPTdesc=$"list file names with requires"

#==============================================================================
rpmu	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmu	alias --ftpport		--define '_ftpport !#:+'
rpmu	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmu	alias --httpport	--define '_httpport !#:+'
rpmu	alias --httpproxy	--define '_httpproxy !#:+'
#==============================================================================
rpmv	alias --dbpath		--define '_dbpath !#:+' \
	--POPTdesc=$"use database in DIRECTORY" \
	--POPTargs=$"DIRECTORY"
rpmv	alias --ftpport		--define '_ftpport !#:+'
rpmv	alias --ftpproxy	--define '_ftpproxy !#:+'
rpmv	alias --httpport	--define '_httpport !#:+'
rpmv	alias --httpproxy	--define '_httpproxy !#:+'

# \endverbatim
#*/
